- hosts: servers
  become: yes
  vars:
    ruby: ruby
    ruby_api_version: 3.1.0
    passenger_version: 6.0.26
    slide_site_directory_relative: work/slide.rabbit-shocker.org
    slide_site_directory: ~rabbit-slide/work/slide.rabbit-shocker.org
  vars_files:
    - vars/private.yml

  tasks:
    # Base
    - name: Install base packages
      apt:
        name:
          - apt-listchanges
          - rsync
          - ruby
          - unattended-upgrades
          - vim
    - name: Use VIM as the default editor
      command: update-alternatives --set editor /usr/bin/vim.basic
    - name: Use e-mail for apt-listchanges
      lineinfile:
        path: /etc/apt/listchanges.conf
        regexp: "^frontend="
        line: "frontend=mail"
    - name: Reboot automatically when package upgrade requires restart
      lineinfile:
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: "^(//)?Unattended-Upgrade::Automatic-Reboot "
        line: "Unattended-Upgrade::Automatic-Reboot \"true\";"
    - name: Send notification when packages upgraded automatically
      lineinfile:
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: "^(//)?Unattended-Upgrade::Mail "
        line: "Unattended-Upgrade::Mail \"root\";"
    - name: "sudo: NOPASSWD"
      copy:
        src: etc/sudoers.d/sudo-nopasswd
        dest: /etc/sudoers.d/sudo-nopasswd
        mode: 0400
    - name: Install Groonga APT repository
      apt:
        deb: https://packages.groonga.org/debian/groonga-apt-source-latest-bookworm.deb
    - name: Install gems
      gem:
        name: "{{ item }}"
        state: latest
        user_install: no
      with_items:
        - base64
        - bundler
        - forwardable

    # Let's Encrypt
    - name: Install certbot
      apt:
        name: certbot
    - name: "Put Let's Encrypt update script"
      copy:
        src: etc/letsencrypt/renewal-hooks/{{ item }}
        dest: /etc/letsencrypt/renewal-hooks/{{ item }}
        mode: 0700
      with_items:
        - post/start-apache2
        - post/start-dovecot
        - post/start-postfix
        - pre/stop-apache2
        - pre/stop-dovecot
        - pre/stop-postfix

    # Let's Encrypt: taiyaki.club
    - name: "taiyaki.club: Check Let's Encrypt certificate"
      stat:
        path: /etc/letsencrypt/live/taiyaki.club/fullchain.pem
      register: certificate_taiyaki_club
    - name: "Stop Apache before initializing Let's Encrypt certificate"
      service:
        name: apache2
        state: stopped
      when: (not certificate_taiyaki_club.stat.exists)
    - name: "taiyaki.club: Initialize Let's Encrypt certificate"
      shell: |
        certbot certonly \
          --standalone \
          --non-interactive \
          --agree-tos \
          --email webmaster@taiyaki.club \
          --domain taiyaki.club
      when: not certificate_taiyaki_club.stat.exists

    # Apache
    - name: Install Apache and related packages
      apt:
        name:
          - apache2
          - apache2-dev
          - build-essential
          - libapr1-dev
          - libaprutil1-dev
          - libcurl4-openssl-dev
          - libssl-dev
          - ruby-dev
          - zlib1g-dev
    - name: Set log rotation for Apache related logs
      lineinfile:
        path: /etc/logrotate.d/apache2
        regexp: "^	rotate"
        line: "	rotate 36500"
    - name: Install Passenger
      gem:
        name: passenger
        version: "{{ passenger_version }}"
        user_install: no
      register: passenger
    - name: Build Passenger
      command: passenger-install-apache2-module --languages ruby --auto
      when: passenger.changed
    - name: Put Passenger configuration files
      template:
        src: etc/apache2/mods-available/{{ item }}.j2
        dest: /etc/apache2/mods-available/{{ item }}
      with_items:
        - passenger.conf
        - passenger.load
      register: passenger_config_files
    - name: Enable Passenger
      command: a2enmod passenger
      when: passenger_config_files.changed
      notify:
        - Restart Apache
    - name: Disable Apache modules
      command: a2dismod {{ item }}
      with_items:
        - mpm_event
        - mpm_prefork
    - name: Enable Apache modules
      command: a2enmod {{ item }}
      with_items:
        - headers
        - mpm_worker
        - setenvif
        - ssl
      notify:
        - Restart Apache
    - name: Put Apache configuration file
      copy:
        src: etc/apache2/sites-available/{{ item }}
        dest: /etc/apache2/sites-available/{{ item }}
      with_items:
        - rabbit-shocker.org.conf
        - taiyaki.club.conf
        - taiyaki.ru.conf
      register: apache_config_files
    - name: Enable our Apache configurations
      command: a2ensite {{ item }}
      with_items:
        - rabbit-shocker.org.conf
        - taiyaki.club.conf
        - taiyaki.ru.conf
      notify:
        - Restart Apache
      when: apache_config_files.changed

    # slide.rabbit-shocker.org
    - name: Install dependencies for slide.rabbit-shocker.org
      apt:
        name:
          - node-less
          - ruby-bundler
    - name: Install slide.rabbit-shocker.org updater
      copy:
        src: lib/systemd/system/slide.rabbit-shocker.org.updater.{{ item }}
        dest: /lib/systemd/system/slide.rabbit-shocker.org.updater.{{ item }}
      with_items:
        - service
        - timer
      notify:
        - Restart slide.rabbit-shocker.org updater
    - name: Put email configuration for slide.rabbit-shocker.org webhook receiver
      copy:
        src: home/rabbit-slide/{{ slide_site_directory_relative }}/webhook-receiver/email.yaml
        dest: "{{ slide_site_directory }}/webhook-receiver/email.yaml"
        owner: rabbit-slide
        group: rabbit-slide
      notify:
        - Restart slide.rabbit-shocker.org webhook receiver
    - name: Create tmp/
      file:
        path: "{{ slide_site_directory }}/{{ item }}/tmp/"
        state: directory
        owner: rabbit-slide
        group: rabbit-slide
      with_items:
        - search
        - webhook-receiver
    - name: Remove Gemfile.lock
      file:
        path: "{{ slide_site_directory }}/{{ item }}/Gemfile.lock"
        state: absent
      with_items:
        - .
        - search
        - webhook-receiver
    - name: Update gems
      become_user: rabbit-slide
      shell: |
        bundle config set --local path vendor/bundle
        bundle install
        bundle binstubs --all
      args:
        chdir: "{{ slide_site_directory }}/{{ item }}/"
      with_items:
        - .
        - search
        - webhook-receiver
      notify:
        - Restart slide.rabbit-shocker.org searcher
        - Restart slide.rabbit-shocker.org webhook receiver
      vars:
        ansible_ssh_pipelining: true

    # Dovecot
    - name: "dovecot: Install"
      apt:
        name:
          - dovecot-imapd
          - dovecot-pop3d
    - name: "dovecot: Install /etc/dovecot/passwd"
      template:
        src: etc/dovecot/passwd.j2
        dest: /etc/dovecot/passwd
      notify:
        - Restart Dovecot
    - name: "dovecot: Enable auto-passwdfile"
      lineinfile:
        path: /etc/dovecot/conf.d/10-auth.conf
        regexp: "^#!include auth-passwdfile.conf.ext"
        line: "!include auth-passwdfile.conf.ext"
      notify:
        - Restart Dovecot
    - name: "dovecot: Use maildir"
      lineinfile:
        path: /etc/dovecot/conf.d/10-mail.conf
        regexp: "^mail_location ="
        line: "mail_location = maildir:~/Maildir"
      notify:
        - Restart Dovecot
    - name: "dovecot: ssl_cert"
      lineinfile:
        path: /etc/dovecot/conf.d/10-ssl.conf
        regexp: "^ssl_cert ="
        line: "ssl_cert = </etc/letsencrypt/live/mail.cozmixng.org/fullchain.pem"
      notify:
        - Restart Dovecot
    - name: "dovecot: ssl_key"
      lineinfile:
        path: /etc/dovecot/conf.d/10-ssl.conf
        regexp: "^ssl_key ="
        line: "ssl_key = </etc/letsencrypt/live/mail.cozmixng.org/privkey.pem"
      notify:
        - Restart Dovecot

    # milter
    - name: Install milters
      apt:
        name:
          - opendkim
    - name: "OpenDKIM: Domain"
      lineinfile:
        path: /etc/opendkim.conf
        regexp: "^#?Domain	"
        line: "Domain	cozmixng.org, taiyaki.club, rabbit-shocker.org"
      notify:
        - Restart OpenDKIM
    - name: "OpenDKIM: KeyFile"
      lineinfile:
        path: /etc/opendkim.conf
        regexp: "^#?KeyFile	"
        line: "KeyFile	/etc/dkimkeys/default.private"
      notify:
        - Restart OpenDKIM
    - name: "OpenDKIM: Selector"
      lineinfile:
        path: /etc/opendkim.conf
        regexp: "^#?Selector	"
        line: "Selector	default"
      notify:
        - Restart OpenDKIM
    - name: "OpenDKIM: Mode"
      lineinfile:
        path: /etc/opendkim.conf
        regexp: "^#?Mode	"
        line: "Mode	sv"
      notify:
        - Restart OpenDKIM
    - name: "OpenDKIM: SubDomains"
      lineinfile:
        path: /etc/opendkim.conf
        regexp: "^#?SubDomains	"
        line: "SubDomains	yes"
      notify:
        - Restart OpenDKIM
    - name: Check whether DKIM sign key exists
      stat:
        path: /etc/dkimkeys/default.private
      register: dkim_sign_key
    - name: Generate DKIM sing key
      become_user: opendkim
      shell: |
        /usr/sbin/opendkim-genkey \
          --directory /etc/dkimkeys \
          --domain cozmixng.org \
          --selector default \
          --subdomains
      vars:
        ansible_ssh_pipelining: true
      notify:
        - Restart OpenDKIM
      when: not dkim_sign_key.stat.exists
    - name: Enable milters
      systemd:
        name: "{{ item }}"
        enabled: yes
      with_items:
        - opendkim
      notify:
        - Restart milter manager

    # Postfix
    - name: Set /etc/aliases
      copy:
        src: etc/aliases
        dest: /etc/aliases
      register: postfix_aliases
    - name: Compile /etc/aliases
      command: postalias /etc/aliases
      when: postfix_aliases.changed
    - name: Install main.cf
      copy:
        src: etc/postfix/main.cf
        dest: /etc/postfix/main.cf
      notify:
        - Restart Postfix
    - name: Install transport_maps
      copy:
        src: etc/postfix/transport_maps
        dest: /etc/postfix/transport_maps
      register: postfix_transport_maps
    - name: Generate transport_maps.db
      shell: |
        postmap /etc/postfix/transport_maps
      when: postfix_transport_maps.changed
      notify:
        - Restart Postfix

  handlers:
    - name: Restart Apache
      systemd:
        name: apache2
        state: restarted
    - name: Restart slide.rabbit-shocker.org updater
      systemd:
        name: slide.rabbit-shocker.org.updater.timer
        enabled: yes
        state: started
        daemon_reload: yes
    - name: Restart Dovecot
      systemd:
        name: dovecot
        state: restarted
    - name: Restart OpenDKIM
      systemd:
        name: opendkim
        state: restarted
    - name: Restart milter manager
      systemd:
        name: milter-manager
        state: restarted
    - name: Restart Postfix
      systemd:
        name: postfix
        state: restarted
    - name: Restart slide.rabbit-shocker.org searcher
      file:
        path: "{{ slide_site_directory }}/search/tmp/restart.txt"
        state: touch
        owner: rabbit-slide
        group: rabbit-slide
    - name: Restart slide.rabbit-shocker.org webhook receiver
      file:
        path: "{{ slide_site_directory }}/webhook-receiver/tmp/restart.txt"
        state: touch
        owner: rabbit-slide
        group: rabbit-slide
